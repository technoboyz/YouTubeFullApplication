// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouTubeFullApplication.DataAccessLayer;

#nullable disable

namespace YouTubeFullApplication.DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240827222749_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("YouTubeFullApplication.Domain.Abbinamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Classe_Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Docente_Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Materia_Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Classe_Id");

                    b.HasIndex("Docente_Id");

                    b.HasIndex("Materia_Id");

                    b.ToTable("Abbinamenti", (string)null);
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Classe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Classi", (string)null);
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Docente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodiceFiscale")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("CognomeNome")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(66)
                        .HasColumnType("TEXT")
                        .HasComputedColumnSql("upper(Cognome || ' ' || Nome)");

                    b.Property<DateOnly>("DataNascita")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CodiceFiscale")
                        .IsUnique();

                    b.HasIndex("CognomeNome");

                    b.ToTable("Docenti", (string)null);
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Frequenza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AnnoScolastico")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Classe_Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Esito")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Studente_Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Classe_Id");

                    b.HasIndex("Studente_Id");

                    b.ToTable("Frequenze", (string)null);
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Materia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Materie", (string)null);
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Studente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodiceFiscale")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("CognomeNome")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(66)
                        .HasColumnType("TEXT")
                        .HasComputedColumnSql("upper(Cognome || ' ' || Nome)");

                    b.Property<DateOnly>("DataNascita")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CodiceFiscale")
                        .IsUnique();

                    b.HasIndex("CognomeNome");

                    b.ToTable("Studenti", (string)null);
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Abbinamento", b =>
                {
                    b.HasOne("YouTubeFullApplication.Domain.Classe", "Classe")
                        .WithMany("Abbinamenti")
                        .HasForeignKey("Classe_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YouTubeFullApplication.Domain.Docente", "Docente")
                        .WithMany("Abbinamenti")
                        .HasForeignKey("Docente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YouTubeFullApplication.Domain.Materia", "Materia")
                        .WithMany("Abbinamenti")
                        .HasForeignKey("Materia_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Docente");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Frequenza", b =>
                {
                    b.HasOne("YouTubeFullApplication.Domain.Classe", "Classe")
                        .WithMany("Frequenze")
                        .HasForeignKey("Classe_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YouTubeFullApplication.Domain.Studente", "Studente")
                        .WithMany("Frequenze")
                        .HasForeignKey("Studente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Studente");
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Classe", b =>
                {
                    b.Navigation("Abbinamenti");

                    b.Navigation("Frequenze");
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Docente", b =>
                {
                    b.Navigation("Abbinamenti");
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Materia", b =>
                {
                    b.Navigation("Abbinamenti");
                });

            modelBuilder.Entity("YouTubeFullApplication.Domain.Studente", b =>
                {
                    b.Navigation("Frequenze");
                });
#pragma warning restore 612, 618
        }
    }
}
